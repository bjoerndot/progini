/*! oliverschwamb v0.0.1 | (c) 2019 OLIVER SCHWAMB | MIT License | http://link-to-your-git-repo.com */
"use strict";let currentLineHeight=15,currentUpperLength=40,currentLineDistance=7.5,markers=[currentLineHeight,currentUpperLength,currentLineDistance];function getPage(){return document.getElementsByClassName("liner_canvas")[0]}function setPageHeight(){let e=getPage(),t=e.clientWidth*Math.sqrt(2);e.style.height=`${t}px`}function mmToPixels(e,t){return e*(t/297)}function getNumLines(e,t,n){return Math.floor(e/(t+n))}function getLineValues(e,t,n){let i=e.clientHeight,r=mmToPixels(i,t),s=mmToPixels(i,n);return{lineHeight:r,lineDistance:s,numLines:getNumLines(i,r,s)}}function setSizeMarker(){let e=document.getElementsByClassName("settings_label");for(let t=0;t<e.length;t++)e[t].innerHTML=e[t].innerHTML.replace(/\d{1,2}\.?\d{0,1}/,markers[t])}function renderLines(e,t,n,i){let r;for(i.innerHTML="",setSizeMarker(),r=0;r<e;r++){const e=document.createElement("div");e.classList.add("liner_divider"),e.style.height=`${n}px`;const r=document.createElement("div");r.classList.add("liner_line"),r.style.height=`${t}px`;const s=document.createElement("div");s.classList.add("liner_line--middle"),s.style.height=`${currentUpperLength}%`,i.appendChild(e),i.appendChild(r),r.appendChild(s)}}function setLineValues(){const e=getPage(),{lineHeight:t,lineDistance:n,numLines:i}=getLineValues(e,currentLineHeight,currentLineDistance);renderLines(i,t,n,e)}function initializingSizes(){setPageHeight(),setLineValues()}function updateSizes(e){currentLineHeight=e.lineHeight,currentUpperLength=e.upperLength,currentLineDistance=e.lineDistance,markers=[currentLineHeight,currentUpperLength,currentLineDistance]}function handleLineClick(e){let t=e.target.closest("button"),n=t.dataset.dir,i=currentLineHeight,r=currentUpperLength,s=currentLineDistance;"line-height"===t.dataset.module?i="+"===n?Math.min(currentLineHeight+1,297):Math.max(currentLineHeight-1,0):"upper-length"===t.dataset.module?r="+"===n?Math.min(currentUpperLength+10,100):Math.max(currentUpperLength-10,0):s="+"===n?Math.min(currentLineDistance+.5,297):Math.max(currentLineDistance-.5,0),updateSizes({lineHeight:i,upperLength:r,lineDistance:s}),setLineValues()}let buttons=document.querySelectorAll("[data-module]");buttons.forEach(e=>{e.addEventListener("click",handleLineClick)}),window.addEventListener("load",initializingSizes);